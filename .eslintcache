[{"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/index.js":"1","/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/App.js":"2","/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/serviceWorker.js":"3","/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/components/Board.js":"4","/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/components/Square.js":"5"},{"size":503,"mtime":1624635185111,"results":"6","hashOfConfig":"7"},{"size":1645,"mtime":1624646465358,"results":"8","hashOfConfig":"7"},{"size":5086,"mtime":1624635185111,"results":"9","hashOfConfig":"7"},{"size":1155,"mtime":1624644863130,"results":"10","hashOfConfig":"7"},{"size":720,"mtime":1624645916399,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"9nlusc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/index.js",[],["24","25"],"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/App.js",[],"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/serviceWorker.js",[],"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/components/Board.js",[],"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/components/Square.js",["26"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Square.css'\n\n//const Square = ({ value, id, currentPlayer }) => {\nconst Square = (props) => {\n  //const state = useState({ id, value })\n  //const [value, setValue] = useState(props.value)\n\n  const updateSquare = () => {\n    //setValue('x')\n    //console.log(\"clicked square\")\n    props.onClickCallback(props.id)\n  }\n\n  return <button\n    className=\"square\"\n    onClick={updateSquare}\n    //onClick={()=>props.onClickCallback()} \n  >\n    {props.value}\n  </button>\n}\n\nSquare.propTypes = {\n  value: PropTypes.string.isRequired,\n  onClickCallback: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default Square\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":17,"nodeType":"33","messageId":"34","endLine":1,"endColumn":25},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]