[{"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/index.js":"1","/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/App.js":"2","/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/serviceWorker.js":"3","/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/components/Board.js":"4","/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/components/Square.js":"5"},{"size":503,"mtime":1624635185111,"results":"6","hashOfConfig":"7"},{"size":1664,"mtime":1624641739268,"results":"8","hashOfConfig":"7"},{"size":5086,"mtime":1624635185111,"results":"9","hashOfConfig":"7"},{"size":894,"mtime":1624639563029,"results":"10","hashOfConfig":"7"},{"size":672,"mtime":1624640404003,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9nlusc",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/index.js",[],"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/App.js",["24"],"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/serviceWorker.js",[],"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/components/Board.js",[],["25","26"],"/Users/becca/GitHub/AdaGold/react-tic-tac-toe/src/components/Square.js",["27","28"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Square.css'\n\n//const Square = ({ value, id, currentPlayer }) => {\nconst Square = (props) => {\n  //const state = useState({ id, value })\n  //const [value, setValue] = useState(props.value)\n\n  const handleClick = () => {\n    props.onClickCallback(props.id)\n  }\n\n  return <button\n    className=\"square\" \n    //onClick={handleClick}\n    onClick = {()=>props.onClickCallback(props.id)}\n  >\n    {props.value}\n  </button>\n}\n\nSquare.propTypes = {\n  value: PropTypes.string.isRequired,\n  onClickCallback: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default Square\n",{"ruleId":"29","severity":1,"message":"30","line":47,"column":11,"nodeType":"31","messageId":"32","endLine":47,"endColumn":16},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"29","severity":1,"message":"37","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":25},{"ruleId":"29","severity":1,"message":"38","line":11,"column":9,"nodeType":"31","messageId":"32","endLine":11,"endColumn":20},"no-unused-vars","'found' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["39"],"no-negated-in-lhs",["40"],"'useState' is defined but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]